// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collective.proto

package endpoints_terrariumai_collective

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Class id
type Entity_Class int32

const (
	Entity_EMPTY Entity_Class = 0
	Entity_AGENT Entity_Class = 1
	Entity_ROCK  Entity_Class = 2
	Entity_FOOD  Entity_Class = 3
)

var Entity_Class_name = map[int32]string{
	0: "EMPTY",
	1: "AGENT",
	2: "ROCK",
	3: "FOOD",
}

var Entity_Class_value = map[string]int32{
	"EMPTY": 0,
	"AGENT": 1,
	"ROCK":  2,
	"FOOD":  3,
}

func (x Entity_Class) String() string {
	return proto.EnumName(Entity_Class_name, int32(x))
}

func (Entity_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{0, 0}
}

// Class
type Effect_Class int32

const (
	Effect_NONE      Effect_Class = 0
	Effect_PHEROMONE Effect_Class = 1
)

var Effect_Class_name = map[int32]string{
	0: "NONE",
	1: "PHEROMONE",
}

var Effect_Class_value = map[string]int32{
	"NONE":      0,
	"PHEROMONE": 1,
}

func (x Effect_Class) String() string {
	return proto.EnumName(Effect_Class_name, int32(x))
}

func (Effect_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{1, 0}
}

// identifier for the action
type Action_Action int32

const (
	Action_WAIT   Action_Action = 0
	Action_MOVE   Action_Action = 1
	Action_EAT    Action_Action = 2
	Action_ATTACK Action_Action = 3
)

var Action_Action_name = map[int32]string{
	0: "WAIT",
	1: "MOVE",
	2: "EAT",
	3: "ATTACK",
}

var Action_Action_value = map[string]int32{
	"WAIT":   0,
	"MOVE":   1,
	"EAT":    2,
	"ATTACK": 3,
}

func (x Action_Action) String() string {
	return proto.EnumName(Action_Action_name, int32(x))
}

func (Action_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{3, 0}
}

// direction to perform the action in
type Action_Direction int32

const (
	Action_UP    Action_Direction = 0
	Action_DOWN  Action_Direction = 1
	Action_LEFT  Action_Direction = 2
	Action_RIGHT Action_Direction = 3
)

var Action_Direction_name = map[int32]string{
	0: "UP",
	1: "DOWN",
	2: "LEFT",
	3: "RIGHT",
}

var Action_Direction_value = map[string]int32{
	"UP":    0,
	"DOWN":  1,
	"LEFT":  2,
	"RIGHT": 3,
}

func (x Action_Direction) String() string {
	return proto.EnumName(Action_Direction_name, int32(x))
}

func (Action_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{3, 1}
}

// Entity message that is in observations
type Entity struct {
	// Unique integer identifier of the agent
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClassID              Entity_Class `protobuf:"varint,2,opt,name=classID,proto3,enum=endpoints.terrariumai.collective.Entity_Class" json:"classID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{0}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Entity) GetClassID() Entity_Class {
	if m != nil {
		return m.ClassID
	}
	return Entity_EMPTY
}

// Effects are manipulations of a cell that last a specific amount of time
type Effect struct {
	ClassID Effect_Class `protobuf:"varint,1,opt,name=classID,proto3,enum=endpoints.terrariumai.collective.Effect_Class" json:"classID,omitempty"`
	// Value, used for observation
	Value                uint32   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Strength             uint32   `protobuf:"varint,3,opt,name=strength,proto3" json:"strength,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Effect) Reset()         { *m = Effect{} }
func (m *Effect) String() string { return proto.CompactTextString(m) }
func (*Effect) ProtoMessage()    {}
func (*Effect) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{1}
}

func (m *Effect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Effect.Unmarshal(m, b)
}
func (m *Effect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Effect.Marshal(b, m, deterministic)
}
func (m *Effect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Effect.Merge(m, src)
}
func (m *Effect) XXX_Size() int {
	return xxx_messageInfo_Effect.Size(m)
}
func (m *Effect) XXX_DiscardUnknown() {
	xxx_messageInfo_Effect.DiscardUnknown(m)
}

var xxx_messageInfo_Effect proto.InternalMessageInfo

func (m *Effect) GetClassID() Effect_Class {
	if m != nil {
		return m.ClassID
	}
	return Effect_NONE
}

func (m *Effect) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Effect) GetStrength() uint32 {
	if m != nil {
		return m.Strength
	}
	return 0
}

// Observation gives data about the agent, and from it's senses
type Observation struct {
	// Is the agent alive
	IsAlive bool `protobuf:"varint,1,opt,name=isAlive,proto3" json:"isAlive,omitempty"`
	// Energy
	Energy uint32 `protobuf:"varint,2,opt,name=energy,proto3" json:"energy,omitempty"`
	// Health
	Health uint32 `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	// Id of the agent that is observing
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// Senses
	Sight                []*Entity `protobuf:"bytes,5,rep,name=sight,proto3" json:"sight,omitempty"`
	Smell                []*Effect `protobuf:"bytes,6,rep,name=smell,proto3" json:"smell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Observation) Reset()         { *m = Observation{} }
func (m *Observation) String() string { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()    {}
func (*Observation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{2}
}

func (m *Observation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation.Unmarshal(m, b)
}
func (m *Observation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation.Marshal(b, m, deterministic)
}
func (m *Observation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation.Merge(m, src)
}
func (m *Observation) XXX_Size() int {
	return xxx_messageInfo_Observation.Size(m)
}
func (m *Observation) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation.DiscardUnknown(m)
}

var xxx_messageInfo_Observation proto.InternalMessageInfo

func (m *Observation) GetIsAlive() bool {
	if m != nil {
		return m.IsAlive
	}
	return false
}

func (m *Observation) GetEnergy() uint32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Observation) GetHealth() uint32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Observation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Observation) GetSight() []*Entity {
	if m != nil {
		return m.Sight
	}
	return nil
}

func (m *Observation) GetSmell() []*Effect {
	if m != nil {
		return m.Smell
	}
	return nil
}

// Action is an action to be performed
type Action struct {
	// Id for the agent that should perform the action
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Action               Action_Action    `protobuf:"varint,2,opt,name=action,proto3,enum=endpoints.terrariumai.collective.Action_Action" json:"action,omitempty"`
	Direction            Action_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=endpoints.terrariumai.collective.Action_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{3}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Action) GetAction() Action_Action {
	if m != nil {
		return m.Action
	}
	return Action_WAIT
}

func (m *Action) GetDirection() Action_Direction {
	if m != nil {
		return m.Direction
	}
	return Action_UP
}

type ObservationPacket struct {
	// List of observations for every agent the RM is controlling
	Observations         []*Observation `protobuf:"bytes,1,rep,name=observations,proto3" json:"observations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ObservationPacket) Reset()         { *m = ObservationPacket{} }
func (m *ObservationPacket) String() string { return proto.CompactTextString(m) }
func (*ObservationPacket) ProtoMessage()    {}
func (*ObservationPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{4}
}

func (m *ObservationPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObservationPacket.Unmarshal(m, b)
}
func (m *ObservationPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObservationPacket.Marshal(b, m, deterministic)
}
func (m *ObservationPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObservationPacket.Merge(m, src)
}
func (m *ObservationPacket) XXX_Size() int {
	return xxx_messageInfo_ObservationPacket.Size(m)
}
func (m *ObservationPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_ObservationPacket.DiscardUnknown(m)
}

var xxx_messageInfo_ObservationPacket proto.InternalMessageInfo

func (m *ObservationPacket) GetObservations() []*Observation {
	if m != nil {
		return m.Observations
	}
	return nil
}

// Request data to create new agent
type ActionPacket struct {
	// List of actions to be performed
	Actions              []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ActionPacket) Reset()         { *m = ActionPacket{} }
func (m *ActionPacket) String() string { return proto.CompactTextString(m) }
func (*ActionPacket) ProtoMessage()    {}
func (*ActionPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2c8c35156a1a162, []int{5}
}

func (m *ActionPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPacket.Unmarshal(m, b)
}
func (m *ActionPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPacket.Marshal(b, m, deterministic)
}
func (m *ActionPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPacket.Merge(m, src)
}
func (m *ActionPacket) XXX_Size() int {
	return xxx_messageInfo_ActionPacket.Size(m)
}
func (m *ActionPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPacket.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPacket proto.InternalMessageInfo

func (m *ActionPacket) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func init() {
	proto.RegisterEnum("endpoints.terrariumai.collective.Entity_Class", Entity_Class_name, Entity_Class_value)
	proto.RegisterEnum("endpoints.terrariumai.collective.Effect_Class", Effect_Class_name, Effect_Class_value)
	proto.RegisterEnum("endpoints.terrariumai.collective.Action_Action", Action_Action_name, Action_Action_value)
	proto.RegisterEnum("endpoints.terrariumai.collective.Action_Direction", Action_Direction_name, Action_Direction_value)
	proto.RegisterType((*Entity)(nil), "endpoints.terrariumai.collective.Entity")
	proto.RegisterType((*Effect)(nil), "endpoints.terrariumai.collective.Effect")
	proto.RegisterType((*Observation)(nil), "endpoints.terrariumai.collective.Observation")
	proto.RegisterType((*Action)(nil), "endpoints.terrariumai.collective.Action")
	proto.RegisterType((*ObservationPacket)(nil), "endpoints.terrariumai.collective.ObservationPacket")
	proto.RegisterType((*ActionPacket)(nil), "endpoints.terrariumai.collective.ActionPacket")
}

func init() { proto.RegisterFile("collective.proto", fileDescriptor_e2c8c35156a1a162) }

var fileDescriptor_e2c8c35156a1a162 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0x9b, 0x4c,
	0x14, 0x86, 0x3d, 0x60, 0xb0, 0x39, 0xf9, 0x11, 0xdf, 0xe8, 0x53, 0x85, 0xb2, 0xb2, 0x58, 0xb1,
	0x29, 0x6d, 0x9c, 0x7d, 0x25, 0x6a, 0x13, 0xdb, 0x4a, 0x6d, 0xdc, 0x11, 0x6d, 0xd4, 0x25, 0xc1,
	0x63, 0x7b, 0x54, 0x0c, 0x11, 0x4c, 0x2c, 0x65, 0xd5, 0x2b, 0xe8, 0xb2, 0x9b, 0x5e, 0x40, 0x6f,
	0xad, 0xb7, 0x51, 0x31, 0x03, 0xd8, 0xcd, 0xc6, 0x74, 0xe5, 0x39, 0x33, 0x7e, 0x9f, 0xf3, 0x9e,
	0x1f, 0x01, 0x66, 0x9c, 0x25, 0x09, 0x8d, 0x39, 0xdb, 0x53, 0xf7, 0x31, 0xcf, 0x78, 0x86, 0x07,
	0x34, 0x5d, 0x3d, 0x66, 0x2c, 0xe5, 0x85, 0xcb, 0x69, 0x9e, 0x47, 0x39, 0x7b, 0xda, 0x45, 0xcc,
	0x3d, 0xfc, 0xcf, 0xfe, 0x81, 0x40, 0xf7, 0x53, 0xce, 0xf8, 0x33, 0xbe, 0x04, 0x85, 0xad, 0x2c,
	0x34, 0x40, 0x8e, 0x41, 0x14, 0xb6, 0xc2, 0x53, 0xe8, 0xc5, 0x49, 0x54, 0x14, 0xb3, 0xb1, 0xa5,
	0x0c, 0x90, 0x73, 0x39, 0x74, 0xdd, 0x53, 0x38, 0x57, 0xa2, 0xdc, 0x51, 0xa9, 0x23, 0xb5, 0xdc,
	0xbe, 0x06, 0x4d, 0xdc, 0x60, 0x03, 0x34, 0x7f, 0xbe, 0x0c, 0xbf, 0x98, 0x9d, 0xf2, 0xe8, 0x4d,
	0xfc, 0x45, 0x68, 0x22, 0xdc, 0x87, 0x2e, 0x09, 0x46, 0x77, 0xa6, 0x52, 0x9e, 0x6e, 0x83, 0x60,
	0x6c, 0xaa, 0xf6, 0xaf, 0xd2, 0xd7, 0x7a, 0x4d, 0x63, 0x7e, 0xec, 0x03, 0xb5, 0xf6, 0x21, 0xa4,
	0x2f, 0x7c, 0xe0, 0xff, 0x41, 0xdb, 0x47, 0xc9, 0x13, 0x15, 0xf5, 0x5c, 0x10, 0x19, 0xe0, 0x2b,
	0xe8, 0x17, 0x3c, 0xa7, 0xe9, 0x86, 0x6f, 0x2d, 0x55, 0x3c, 0x34, 0xb1, 0x3d, 0xa8, 0x9d, 0xf7,
	0xa1, 0xbb, 0x08, 0x16, 0xbe, 0xd9, 0xc1, 0x17, 0x60, 0x2c, 0xa7, 0x3e, 0x09, 0xe6, 0x65, 0x88,
	0xec, 0xdf, 0x08, 0xce, 0x82, 0x87, 0x82, 0xe6, 0xfb, 0x88, 0xb3, 0x2c, 0xc5, 0x16, 0xf4, 0x58,
	0xe1, 0x25, 0x6c, 0x4f, 0x85, 0xdb, 0x3e, 0xa9, 0x43, 0xfc, 0x0a, 0x74, 0x9a, 0xd2, 0x7c, 0xf3,
	0x5c, 0xa5, 0xaf, 0xa2, 0xf2, 0x7e, 0x4b, 0xa3, 0xa4, 0xc9, 0x5e, 0x45, 0xd5, 0x3c, 0xba, 0xcd,
	0x3c, 0xde, 0x81, 0x56, 0xb0, 0xcd, 0x96, 0x5b, 0xda, 0x40, 0x75, 0xce, 0x86, 0x4e, 0xdb, 0x69,
	0x10, 0x29, 0x13, 0xfa, 0x1d, 0x4d, 0x12, 0x4b, 0x6f, 0xad, 0x17, 0x5d, 0x24, 0x52, 0x66, 0xff,
	0x54, 0x40, 0xf7, 0x62, 0x51, 0xe4, 0xcb, 0x55, 0x99, 0x80, 0x1e, 0x89, 0x97, 0x6a, 0x53, 0xde,
	0x9c, 0x66, 0x4b, 0x52, 0xf5, 0x43, 0x2a, 0x39, 0x5e, 0x82, 0xb1, 0x62, 0x39, 0x95, 0x2c, 0x55,
	0xb0, 0x86, 0xad, 0x59, 0xe3, 0x5a, 0x49, 0x0e, 0x10, 0xfb, 0xba, 0x31, 0xdd, 0x87, 0xee, 0xbd,
	0x37, 0x0b, 0xcd, 0x4e, 0x79, 0x9a, 0x07, 0x9f, 0x7d, 0x13, 0xe1, 0x1e, 0xa8, 0xbe, 0x17, 0x9a,
	0x0a, 0x06, 0xd0, 0xbd, 0x30, 0xf4, 0x46, 0x77, 0xa6, 0x6a, 0x0f, 0xc1, 0x68, 0x50, 0x58, 0x07,
	0xe5, 0xd3, 0x52, 0x6a, 0xc6, 0xc1, 0xfd, 0x42, 0xae, 0xeb, 0x07, 0xff, 0xb6, 0x14, 0x19, 0xa0,
	0x91, 0xd9, 0x64, 0x1a, 0x9a, 0xaa, 0xbd, 0x86, 0xff, 0x8e, 0xb6, 0x60, 0x19, 0xc5, 0x5f, 0x29,
	0xc7, 0x1f, 0xe1, 0x3c, 0x3b, 0x5c, 0x16, 0x16, 0x12, 0x8d, 0x7f, 0x7d, 0xba, 0xa0, 0x23, 0x14,
	0xf9, 0x0b, 0x61, 0x13, 0x38, 0x97, 0xe5, 0x54, 0x29, 0xde, 0x43, 0x4f, 0xb6, 0xae, 0xa6, 0x3b,
	0x6d, 0xdb, 0x45, 0x6a, 0xe1, 0xf0, 0x3b, 0x02, 0x18, 0x35, 0xcf, 0xf8, 0x1b, 0xe0, 0x51, 0x96,
	0xa6, 0xe5, 0xe4, 0xe9, 0x2e, 0xe3, 0x74, 0x9e, 0xad, 0x68, 0x82, 0xdd, 0xb6, 0x5c, 0x69, 0xec,
	0xea, 0xe6, 0x9f, 0xaa, 0x94, 0x22, 0xbb, 0xe3, 0xa0, 0xb7, 0xe8, 0x41, 0x17, 0x1f, 0xaf, 0x9b,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x95, 0x36, 0x68, 0xd0, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectiveClient is the client API for Collective service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectiveClient interface {
	// Connect a new RM
	ConnectRemoteModel(ctx context.Context, opts ...grpc.CallOption) (Collective_ConnectRemoteModelClient, error)
}

type collectiveClient struct {
	cc *grpc.ClientConn
}

func NewCollectiveClient(cc *grpc.ClientConn) CollectiveClient {
	return &collectiveClient{cc}
}

func (c *collectiveClient) ConnectRemoteModel(ctx context.Context, opts ...grpc.CallOption) (Collective_ConnectRemoteModelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Collective_serviceDesc.Streams[0], "/endpoints.terrariumai.collective.Collective/ConnectRemoteModel", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectiveConnectRemoteModelClient{stream}
	return x, nil
}

type Collective_ConnectRemoteModelClient interface {
	Send(*ActionPacket) error
	Recv() (*ObservationPacket, error)
	grpc.ClientStream
}

type collectiveConnectRemoteModelClient struct {
	grpc.ClientStream
}

func (x *collectiveConnectRemoteModelClient) Send(m *ActionPacket) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectiveConnectRemoteModelClient) Recv() (*ObservationPacket, error) {
	m := new(ObservationPacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CollectiveServer is the server API for Collective service.
type CollectiveServer interface {
	// Connect a new RM
	ConnectRemoteModel(Collective_ConnectRemoteModelServer) error
}

// UnimplementedCollectiveServer can be embedded to have forward compatible implementations.
type UnimplementedCollectiveServer struct {
}

func (*UnimplementedCollectiveServer) ConnectRemoteModel(srv Collective_ConnectRemoteModelServer) error {
	return status.Errorf(codes.Unimplemented, "method ConnectRemoteModel not implemented")
}

func RegisterCollectiveServer(s *grpc.Server, srv CollectiveServer) {
	s.RegisterService(&_Collective_serviceDesc, srv)
}

func _Collective_ConnectRemoteModel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectiveServer).ConnectRemoteModel(&collectiveConnectRemoteModelServer{stream})
}

type Collective_ConnectRemoteModelServer interface {
	Send(*ObservationPacket) error
	Recv() (*ActionPacket, error)
	grpc.ServerStream
}

type collectiveConnectRemoteModelServer struct {
	grpc.ServerStream
}

func (x *collectiveConnectRemoteModelServer) Send(m *ObservationPacket) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectiveConnectRemoteModelServer) Recv() (*ActionPacket, error) {
	m := new(ActionPacket)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Collective_serviceDesc = grpc.ServiceDesc{
	ServiceName: "endpoints.terrariumai.collective.Collective",
	HandlerType: (*CollectiveServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ConnectRemoteModel",
			Handler:       _Collective_ConnectRemoteModel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "collective.proto",
}
