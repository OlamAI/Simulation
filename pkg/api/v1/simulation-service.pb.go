// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Taks we have to do
type Agent struct {
	// Unique integer identifier of the agent
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Position
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{0}
}

func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (m *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(m, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Agent) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Agent) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Action struct {
	// identifier for the action
	// Ex. Move, Eat, etc.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// direction to perform the action in
	// Ex. Up, Down, etc.
	Direction            string   `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{1}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Action) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

type Observation struct {
	// Cells around the agent
	Cells []string `protobuf:"bytes,1,rep,name=Cells,proto3" json:"Cells,omitempty"`
	// Agent stats
	Alive                bool     `protobuf:"varint,2,opt,name=Alive,proto3" json:"Alive,omitempty"`
	Energy               int32    `protobuf:"varint,3,opt,name=Energy,proto3" json:"Energy,omitempty"`
	Health               int32    `protobuf:"varint,4,opt,name=Health,proto3" json:"Health,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Observation) Reset()         { *m = Observation{} }
func (m *Observation) String() string { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()    {}
func (*Observation) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{2}
}

func (m *Observation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation.Unmarshal(m, b)
}
func (m *Observation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation.Marshal(b, m, deterministic)
}
func (m *Observation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation.Merge(m, src)
}
func (m *Observation) XXX_Size() int {
	return xxx_messageInfo_Observation.Size(m)
}
func (m *Observation) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation.DiscardUnknown(m)
}

var xxx_messageInfo_Observation proto.InternalMessageInfo

func (m *Observation) GetCells() []string {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *Observation) GetAlive() bool {
	if m != nil {
		return m.Alive
	}
	return false
}

func (m *Observation) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Observation) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

type CellUpdate struct {
	// Position
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	// The entity occupying a cell
	Occupant             string   `protobuf:"bytes,3,opt,name=occupant,proto3" json:"occupant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellUpdate) Reset()         { *m = CellUpdate{} }
func (m *CellUpdate) String() string { return proto.CompactTextString(m) }
func (*CellUpdate) ProtoMessage()    {}
func (*CellUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{3}
}

func (m *CellUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellUpdate.Unmarshal(m, b)
}
func (m *CellUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellUpdate.Marshal(b, m, deterministic)
}
func (m *CellUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellUpdate.Merge(m, src)
}
func (m *CellUpdate) XXX_Size() int {
	return xxx_messageInfo_CellUpdate.Size(m)
}
func (m *CellUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CellUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CellUpdate proto.InternalMessageInfo

func (m *CellUpdate) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CellUpdate) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *CellUpdate) GetOccupant() string {
	if m != nil {
		return m.Occupant
	}
	return ""
}

type Region struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{4}
}

func (m *Region) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Region.Unmarshal(m, b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Region.Marshal(b, m, deterministic)
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return xxx_messageInfo_Region.Size(m)
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Region) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// Request data to create new agent
type CreateAgentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Agent to add
	Agent                *Agent   `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentRequest) Reset()         { *m = CreateAgentRequest{} }
func (m *CreateAgentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAgentRequest) ProtoMessage()    {}
func (*CreateAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{5}
}

func (m *CreateAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentRequest.Unmarshal(m, b)
}
func (m *CreateAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentRequest.Marshal(b, m, deterministic)
}
func (m *CreateAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentRequest.Merge(m, src)
}
func (m *CreateAgentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAgentRequest.Size(m)
}
func (m *CreateAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentRequest proto.InternalMessageInfo

func (m *CreateAgentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateAgentRequest) GetAgent() *Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

// Contains data of created agent
type CreateAgentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created agent
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentResponse) Reset()         { *m = CreateAgentResponse{} }
func (m *CreateAgentResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAgentResponse) ProtoMessage()    {}
func (*CreateAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{6}
}

func (m *CreateAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentResponse.Unmarshal(m, b)
}
func (m *CreateAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentResponse.Marshal(b, m, deterministic)
}
func (m *CreateAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentResponse.Merge(m, src)
}
func (m *CreateAgentResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAgentResponse.Size(m)
}
func (m *CreateAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentResponse proto.InternalMessageInfo

func (m *CreateAgentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateAgentResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request data to read agent
type GetAgentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the agent
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentRequest) Reset()         { *m = GetAgentRequest{} }
func (m *GetAgentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentRequest) ProtoMessage()    {}
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{7}
}

func (m *GetAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentRequest.Unmarshal(m, b)
}
func (m *GetAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentRequest.Merge(m, src)
}
func (m *GetAgentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentRequest.Size(m)
}
func (m *GetAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentRequest proto.InternalMessageInfo

func (m *GetAgentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Contains agent data specified in by ID request
type GetAgentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity read by ID
	Agent                *Agent   `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentResponse) Reset()         { *m = GetAgentResponse{} }
func (m *GetAgentResponse) String() string { return proto.CompactTextString(m) }
func (*GetAgentResponse) ProtoMessage()    {}
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{8}
}

func (m *GetAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentResponse.Unmarshal(m, b)
}
func (m *GetAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentResponse.Marshal(b, m, deterministic)
}
func (m *GetAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentResponse.Merge(m, src)
}
func (m *GetAgentResponse) XXX_Size() int {
	return xxx_messageInfo_GetAgentResponse.Size(m)
}
func (m *GetAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentResponse proto.InternalMessageInfo

func (m *GetAgentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentResponse) GetAgent() *Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

// Request data to delete agent
type DeleteAgentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the agent to delete
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAgentRequest) Reset()         { *m = DeleteAgentRequest{} }
func (m *DeleteAgentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAgentRequest) ProtoMessage()    {}
func (*DeleteAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{9}
}

func (m *DeleteAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAgentRequest.Unmarshal(m, b)
}
func (m *DeleteAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAgentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAgentRequest.Merge(m, src)
}
func (m *DeleteAgentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAgentRequest.Size(m)
}
func (m *DeleteAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAgentRequest proto.InternalMessageInfo

func (m *DeleteAgentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteAgentRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Contains status of delete operation
type DeleteAgentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed deleted
	// Equals 1 in case of successful delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAgentResponse) Reset()         { *m = DeleteAgentResponse{} }
func (m *DeleteAgentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAgentResponse) ProtoMessage()    {}
func (*DeleteAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{10}
}

func (m *DeleteAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAgentResponse.Unmarshal(m, b)
}
func (m *DeleteAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAgentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAgentResponse.Merge(m, src)
}
func (m *DeleteAgentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAgentResponse.Size(m)
}
func (m *DeleteAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAgentResponse proto.InternalMessageInfo

func (m *DeleteAgentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteAgentResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

type ExecuteAgentActionRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id for the agent that should perform the action
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Action id
	Action               *Action  `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteAgentActionRequest) Reset()         { *m = ExecuteAgentActionRequest{} }
func (m *ExecuteAgentActionRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteAgentActionRequest) ProtoMessage()    {}
func (*ExecuteAgentActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{11}
}

func (m *ExecuteAgentActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteAgentActionRequest.Unmarshal(m, b)
}
func (m *ExecuteAgentActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteAgentActionRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteAgentActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteAgentActionRequest.Merge(m, src)
}
func (m *ExecuteAgentActionRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteAgentActionRequest.Size(m)
}
func (m *ExecuteAgentActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteAgentActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteAgentActionRequest proto.InternalMessageInfo

func (m *ExecuteAgentActionRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ExecuteAgentActionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExecuteAgentActionRequest) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type ExecuteAgentActionResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api               string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IsAgentStillAlive bool   `protobuf:"varint,2,opt,name=isAgentStillAlive,proto3" json:"isAgentStillAlive,omitempty"`
	// Was the agent able to perform the action
	WasActionSuccessful  bool     `protobuf:"varint,3,opt,name=wasActionSuccessful,proto3" json:"wasActionSuccessful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteAgentActionResponse) Reset()         { *m = ExecuteAgentActionResponse{} }
func (m *ExecuteAgentActionResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteAgentActionResponse) ProtoMessage()    {}
func (*ExecuteAgentActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{12}
}

func (m *ExecuteAgentActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteAgentActionResponse.Unmarshal(m, b)
}
func (m *ExecuteAgentActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteAgentActionResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteAgentActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteAgentActionResponse.Merge(m, src)
}
func (m *ExecuteAgentActionResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteAgentActionResponse.Size(m)
}
func (m *ExecuteAgentActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteAgentActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteAgentActionResponse proto.InternalMessageInfo

func (m *ExecuteAgentActionResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ExecuteAgentActionResponse) GetIsAgentStillAlive() bool {
	if m != nil {
		return m.IsAgentStillAlive
	}
	return false
}

func (m *ExecuteAgentActionResponse) GetWasActionSuccessful() bool {
	if m != nil {
		return m.WasActionSuccessful
	}
	return false
}

type GetAgentObservationRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Agent that should perform the action
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentObservationRequest) Reset()         { *m = GetAgentObservationRequest{} }
func (m *GetAgentObservationRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentObservationRequest) ProtoMessage()    {}
func (*GetAgentObservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{13}
}

func (m *GetAgentObservationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentObservationRequest.Unmarshal(m, b)
}
func (m *GetAgentObservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentObservationRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentObservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentObservationRequest.Merge(m, src)
}
func (m *GetAgentObservationRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentObservationRequest.Size(m)
}
func (m *GetAgentObservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentObservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentObservationRequest proto.InternalMessageInfo

func (m *GetAgentObservationRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentObservationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAgentObservationResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Was the agent able to perform the action
	Observation          *Observation `protobuf:"bytes,2,opt,name=observation,proto3" json:"observation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAgentObservationResponse) Reset()         { *m = GetAgentObservationResponse{} }
func (m *GetAgentObservationResponse) String() string { return proto.CompactTextString(m) }
func (*GetAgentObservationResponse) ProtoMessage()    {}
func (*GetAgentObservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{14}
}

func (m *GetAgentObservationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentObservationResponse.Unmarshal(m, b)
}
func (m *GetAgentObservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentObservationResponse.Marshal(b, m, deterministic)
}
func (m *GetAgentObservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentObservationResponse.Merge(m, src)
}
func (m *GetAgentObservationResponse) XXX_Size() int {
	return xxx_messageInfo_GetAgentObservationResponse.Size(m)
}
func (m *GetAgentObservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentObservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentObservationResponse proto.InternalMessageInfo

func (m *GetAgentObservationResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentObservationResponse) GetObservation() *Observation {
	if m != nil {
		return m.Observation
	}
	return nil
}

// ----------------------
// -- Spectate
// ----------------------
type CreateSpectatorRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id of the spectator
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSpectatorRequest) Reset()         { *m = CreateSpectatorRequest{} }
func (m *CreateSpectatorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSpectatorRequest) ProtoMessage()    {}
func (*CreateSpectatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{15}
}

func (m *CreateSpectatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSpectatorRequest.Unmarshal(m, b)
}
func (m *CreateSpectatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSpectatorRequest.Marshal(b, m, deterministic)
}
func (m *CreateSpectatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpectatorRequest.Merge(m, src)
}
func (m *CreateSpectatorRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSpectatorRequest.Size(m)
}
func (m *CreateSpectatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpectatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpectatorRequest proto.InternalMessageInfo

func (m *CreateSpectatorRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateSpectatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SubscribeSpectatorToRegionRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id of the spectator
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// What region to add to
	Region               *Region  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeSpectatorToRegionRequest) Reset()         { *m = SubscribeSpectatorToRegionRequest{} }
func (m *SubscribeSpectatorToRegionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeSpectatorToRegionRequest) ProtoMessage()    {}
func (*SubscribeSpectatorToRegionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{16}
}

func (m *SubscribeSpectatorToRegionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Unmarshal(m, b)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeSpectatorToRegionRequest.Merge(m, src)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Size(m)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeSpectatorToRegionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeSpectatorToRegionRequest proto.InternalMessageInfo

func (m *SubscribeSpectatorToRegionRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SubscribeSpectatorToRegionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubscribeSpectatorToRegionRequest) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type SubscribeSpectatorToRegionResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Success status
	Successful           bool     `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeSpectatorToRegionResponse) Reset()         { *m = SubscribeSpectatorToRegionResponse{} }
func (m *SubscribeSpectatorToRegionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeSpectatorToRegionResponse) ProtoMessage()    {}
func (*SubscribeSpectatorToRegionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{17}
}

func (m *SubscribeSpectatorToRegionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Unmarshal(m, b)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeSpectatorToRegionResponse.Merge(m, src)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Size(m)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeSpectatorToRegionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeSpectatorToRegionResponse proto.InternalMessageInfo

func (m *SubscribeSpectatorToRegionResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SubscribeSpectatorToRegionResponse) GetSuccessful() bool {
	if m != nil {
		return m.Successful
	}
	return false
}

func init() {
	proto.RegisterType((*Agent)(nil), "v1.Agent")
	proto.RegisterType((*Action)(nil), "v1.Action")
	proto.RegisterType((*Observation)(nil), "v1.Observation")
	proto.RegisterType((*CellUpdate)(nil), "v1.CellUpdate")
	proto.RegisterType((*Region)(nil), "v1.Region")
	proto.RegisterType((*CreateAgentRequest)(nil), "v1.CreateAgentRequest")
	proto.RegisterType((*CreateAgentResponse)(nil), "v1.CreateAgentResponse")
	proto.RegisterType((*GetAgentRequest)(nil), "v1.GetAgentRequest")
	proto.RegisterType((*GetAgentResponse)(nil), "v1.GetAgentResponse")
	proto.RegisterType((*DeleteAgentRequest)(nil), "v1.DeleteAgentRequest")
	proto.RegisterType((*DeleteAgentResponse)(nil), "v1.DeleteAgentResponse")
	proto.RegisterType((*ExecuteAgentActionRequest)(nil), "v1.ExecuteAgentActionRequest")
	proto.RegisterType((*ExecuteAgentActionResponse)(nil), "v1.ExecuteAgentActionResponse")
	proto.RegisterType((*GetAgentObservationRequest)(nil), "v1.GetAgentObservationRequest")
	proto.RegisterType((*GetAgentObservationResponse)(nil), "v1.GetAgentObservationResponse")
	proto.RegisterType((*CreateSpectatorRequest)(nil), "v1.CreateSpectatorRequest")
	proto.RegisterType((*SubscribeSpectatorToRegionRequest)(nil), "v1.SubscribeSpectatorToRegionRequest")
	proto.RegisterType((*SubscribeSpectatorToRegionResponse)(nil), "v1.SubscribeSpectatorToRegionResponse")
}

func init() { proto.RegisterFile("simulation-service.proto", fileDescriptor_17d1085a606d9278) }

var fileDescriptor_17d1085a606d9278 = []byte{
	// 927 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x4d, 0x6f, 0xe3, 0xc4,
	0x1b, 0x97, 0x93, 0x4d, 0xb6, 0x79, 0xf2, 0xff, 0xb7, 0xdd, 0x49, 0x29, 0x59, 0x53, 0xba, 0x66,
	0x54, 0x50, 0xa9, 0xb6, 0x71, 0xd3, 0x56, 0x8b, 0x14, 0x24, 0x44, 0xd8, 0xad, 0x96, 0x0b, 0x42,
	0x72, 0x4a, 0xef, 0x13, 0x67, 0x70, 0x66, 0xe5, 0x7a, 0x8c, 0x67, 0x9c, 0xb6, 0x8b, 0xb8, 0xf0,
	0x01, 0x38, 0xc0, 0x0d, 0xf1, 0xad, 0x10, 0x07, 0xee, 0x7c, 0x03, 0xbe, 0x00, 0x9a, 0x19, 0xbb,
	0x76, 0x5e, 0xbc, 0xe9, 0xa9, 0x7d, 0x5e, 0x7e, 0xbf, 0xe7, 0x7d, 0x62, 0xe8, 0x0a, 0x76, 0x9d,
	0x86, 0x44, 0x32, 0x1e, 0x1d, 0x0b, 0x9a, 0xcc, 0x98, 0x4f, 0x7b, 0x71, 0xc2, 0x25, 0x47, 0xb5,
	0x59, 0xdf, 0xde, 0x0b, 0x38, 0x0f, 0x42, 0xea, 0x92, 0x98, 0xb9, 0x24, 0x8a, 0xb8, 0xd4, 0x8e,
	0xc2, 0x78, 0xd8, 0xcf, 0xf5, 0x1f, 0xff, 0x38, 0xa0, 0xd1, 0xb1, 0xb8, 0x21, 0x41, 0x40, 0x13,
	0x97, 0xc7, 0xda, 0x63, 0xd9, 0x1b, 0x9f, 0x41, 0x63, 0x18, 0xd0, 0x48, 0xa2, 0x4d, 0xa8, 0xb1,
	0x49, 0xd7, 0x72, 0xac, 0xc3, 0xba, 0x57, 0x63, 0x13, 0xf4, 0x3f, 0xb0, 0x6e, 0xbb, 0x35, 0xc7,
	0x3a, 0x6c, 0x78, 0xd6, 0xad, 0x92, 0xee, 0xba, 0x75, 0x23, 0xdd, 0xe1, 0x17, 0xd0, 0x1c, 0xfa,
	0x8a, 0xa5, 0x84, 0x6a, 0x69, 0xd4, 0x1e, 0xb4, 0x26, 0x2c, 0xa1, 0xda, 0xa8, 0xd1, 0x2d, 0xaf,
	0x50, 0x60, 0x06, 0xed, 0x6f, 0xc7, 0xaa, 0x1e, 0x9d, 0x02, 0xda, 0x81, 0xc6, 0x4b, 0x1a, 0x86,
	0xa2, 0x6b, 0x39, 0xf5, 0xc3, 0x96, 0x67, 0x04, 0xa5, 0x1d, 0x86, 0x6c, 0x46, 0x35, 0x7c, 0xc3,
	0x33, 0x02, 0xda, 0x85, 0xe6, 0x45, 0x44, 0x93, 0x20, 0xcf, 0x22, 0x93, 0x94, 0xfe, 0x6b, 0x4a,
	0x42, 0x39, 0xed, 0x3e, 0x32, 0x7a, 0x23, 0xe1, 0x57, 0x00, 0x8a, 0xee, 0xbb, 0x78, 0x42, 0x24,
	0x35, 0xc5, 0x58, 0x73, 0xc5, 0x64, 0xa5, 0xdd, 0x21, 0x1b, 0x36, 0xb8, 0xef, 0xa7, 0x31, 0x89,
	0xa4, 0xe6, 0x6e, 0x79, 0xf7, 0x32, 0x3e, 0x80, 0xa6, 0x47, 0x03, 0x95, 0xeb, 0x3b, 0x18, 0xf0,
	0x6b, 0x40, 0x2f, 0x13, 0x4a, 0x24, 0xd5, 0x9d, 0xf4, 0xe8, 0x0f, 0x29, 0x15, 0x12, 0x6d, 0x43,
	0x9d, 0xc4, 0x2c, 0xeb, 0x8d, 0xfa, 0x17, 0x3d, 0x83, 0x06, 0x51, 0x1e, 0x1a, 0xd9, 0x3e, 0x6d,
	0xf5, 0x66, 0xfd, 0x9e, 0x81, 0x18, 0x3d, 0xfe, 0x0c, 0x3a, 0x73, 0x44, 0x22, 0xe6, 0x91, 0xa0,
	0x2b, 0x98, 0x4c, 0xdb, 0x6b, 0xf9, 0xb0, 0xf0, 0x19, 0x6c, 0xbd, 0xa6, 0x72, 0x4d, 0xf8, 0x45,
	0xd0, 0x05, 0x6c, 0x17, 0xa0, 0xca, 0x50, 0x6b, 0x93, 0x7e, 0x01, 0xe8, 0x15, 0x0d, 0xe9, 0xda,
	0xea, 0x17, 0xc3, 0x0f, 0xa1, 0x33, 0x87, 0xab, 0xcc, 0xa0, 0x0b, 0x8f, 0x27, 0xda, 0x31, 0x47,
	0xe7, 0x22, 0x26, 0xf0, 0xf4, 0xe2, 0x96, 0xfa, 0x69, 0xc6, 0x61, 0x76, 0xf2, 0xc1, 0x19, 0x20,
	0x0c, 0x4d, 0x62, 0x36, 0xb5, 0xae, 0x6b, 0x03, 0x5d, 0x9b, 0x21, 0xc9, 0x2c, 0xf8, 0x17, 0x0b,
	0xec, 0x55, 0x31, 0x2a, 0xb3, 0x7d, 0x0e, 0x4f, 0x98, 0xd0, 0xae, 0x23, 0xc9, 0xc2, 0xb0, 0xbc,
	0xca, 0xcb, 0x06, 0x74, 0x02, 0x9d, 0x1b, 0x22, 0x0c, 0xe9, 0x28, 0xf5, 0x7d, 0x2a, 0xc4, 0xf7,
	0x69, 0xa8, 0xf3, 0xd9, 0xf0, 0x56, 0x99, 0xf0, 0x17, 0x60, 0xe7, 0x53, 0x2b, 0xdd, 0xd2, 0xc3,
	0xdb, 0x3e, 0x86, 0x0f, 0x56, 0xe2, 0x2b, 0x0b, 0xea, 0x43, 0x9b, 0x17, 0x8e, 0xd9, 0x1a, 0x6c,
	0xa9, 0x56, 0x95, 0xf1, 0x65, 0x1f, 0x3c, 0x80, 0x5d, 0xb3, 0xc7, 0xa3, 0x98, 0xfa, 0x92, 0x48,
	0x9e, 0x3c, 0x24, 0x3f, 0xfd, 0x82, 0x60, 0x06, 0x1f, 0x8d, 0xd2, 0xb1, 0xf0, 0x13, 0x36, 0x2e,
	0xe0, 0x97, 0xdc, 0x9c, 0xe1, 0x83, 0x69, 0xd4, 0x6c, 0x13, 0x0d, 0x29, 0xcf, 0x36, 0x23, 0xc9,
	0x2c, 0xf8, 0x0a, 0xf0, 0xbb, 0x42, 0x55, 0x76, 0x64, 0x1f, 0x40, 0x14, 0xb3, 0x32, 0xb3, 0x2d,
	0x69, 0x4e, 0xff, 0x6d, 0xc0, 0x93, 0xd1, 0xfd, 0x03, 0x3e, 0x32, 0xef, 0x37, 0xba, 0x84, 0x76,
	0xe9, 0xb8, 0xd1, 0xae, 0x4a, 0x68, 0xf9, 0xd9, 0xb0, 0xdf, 0x5f, 0xd2, 0x9b, 0x3c, 0xf0, 0xce,
	0xcf, 0x7f, 0xfe, 0xf3, 0x5b, 0x6d, 0x13, 0xb7, 0xdc, 0x59, 0xdf, 0xd5, 0xa7, 0x37, 0xb0, 0x8e,
	0xd0, 0x37, 0xb0, 0x91, 0x8f, 0x13, 0x75, 0x14, 0x74, 0xe1, 0x1d, 0xb0, 0x77, 0xe6, 0x95, 0x19,
	0xd9, 0xae, 0x26, 0xdb, 0x46, 0x9b, 0xf7, 0x64, 0xee, 0x8f, 0x6c, 0xf2, 0x13, 0xba, 0x82, 0x76,
	0xe9, 0x28, 0x4d, 0x92, 0xcb, 0xd7, 0x6d, 0x92, 0x5c, 0x71, 0xbd, 0x95, 0xbc, 0x11, 0xa0, 0xe5,
	0x2b, 0x42, 0x1f, 0x2a, 0x9a, 0xca, 0x0b, 0xb6, 0xf7, 0xab, 0xcc, 0x59, 0xb0, 0xa7, 0x3a, 0x58,
	0xc7, 0x5e, 0x08, 0xa6, 0xda, 0xf2, 0x16, 0x3a, 0x2b, 0xb6, 0x1c, 0xed, 0x97, 0x9b, 0xb1, 0x7c,
	0x3e, 0xf6, 0xb3, 0x4a, 0x7b, 0x16, 0x12, 0xeb, 0x90, 0x7b, 0xc8, 0x9e, 0x0f, 0xe9, 0x96, 0xb6,
	0x1f, 0x5d, 0xc1, 0xd6, 0xc2, 0xf6, 0x23, 0xbb, 0x18, 0xea, 0xe2, 0x49, 0xd8, 0x9b, 0xda, 0x76,
	0xff, 0x5b, 0x85, 0xdf, 0xd3, 0x21, 0xb6, 0xd0, 0xff, 0x55, 0x08, 0x91, 0x7b, 0x9f, 0x58, 0xe8,
	0x0f, 0x0b, 0xec, 0xea, 0x7d, 0x45, 0x1f, 0x2b, 0x9e, 0xb5, 0xa7, 0x63, 0x7f, 0xb2, 0xce, 0x2d,
	0xab, 0xd4, 0xd5, 0x69, 0x7c, 0x6a, 0x1f, 0xcc, 0xa5, 0x61, 0xaa, 0x15, 0x39, 0x3c, 0x47, 0x0d,
	0xac, 0xa3, 0xaf, 0xfe, 0xb6, 0x7e, 0x1d, 0xfe, 0x65, 0x21, 0x0e, 0xa8, 0xd8, 0x7d, 0x27, 0xfb,
	0x78, 0xc1, 0x97, 0x80, 0x8a, 0x4f, 0x1a, 0x27, 0x4e, 0xf8, 0x1b, 0xea, 0x4b, 0x74, 0x30, 0x95,
	0x32, 0x16, 0x03, 0xd7, 0x0d, 0x98, 0x9c, 0xa6, 0xe3, 0x9e, 0xcf, 0xaf, 0x5d, 0x1e, 0x92, 0x6b,
	0xc2, 0xdc, 0xc2, 0xdb, 0xee, 0xbe, 0x25, 0xfe, 0x94, 0x24, 0x77, 0x53, 0x1e, 0x86, 0x24, 0x9a,
	0x7c, 0x19, 0x5c, 0x13, 0x16, 0x2a, 0xdf, 0xd3, 0x7a, 0xbf, 0x77, 0x72, 0x64, 0x59, 0xa7, 0xdb,
	0x24, 0x8e, 0x43, 0xe6, 0x6b, 0x77, 0xf7, 0x8d, 0xe0, 0xd1, 0x60, 0x49, 0xe3, 0x7d, 0x0e, 0xf5,
	0xf3, 0x93, 0x73, 0x74, 0x0e, 0x47, 0x1e, 0x95, 0x69, 0x12, 0xd1, 0x89, 0x73, 0x33, 0xa5, 0x91,
	0x23, 0xa7, 0xd4, 0x49, 0xa8, 0xe0, 0x69, 0xe2, 0x53, 0x67, 0xc2, 0xa9, 0x70, 0x22, 0x2e, 0x1d,
	0x7a, 0xcb, 0x84, 0xec, 0xa1, 0x26, 0x3c, 0xfa, 0xbd, 0x66, 0x3d, 0x1e, 0x37, 0xf5, 0xc7, 0xd2,
	0xd9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x22, 0x1b, 0x26, 0x94, 0x98, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimulationServiceClient is the client API for SimulationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimulationServiceClient interface {
	// Create new agent
	CreateAgent(ctx context.Context, in *CreateAgentRequest, opts ...grpc.CallOption) (*CreateAgentResponse, error)
	// Get data for an agent
	GetAgent(ctx context.Context, in *GetAgentRequest, opts ...grpc.CallOption) (*GetAgentResponse, error)
	// Delete an agent
	DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*DeleteAgentResponse, error)
	// Perform an action for an agent
	ExecuteAgentAction(ctx context.Context, in *ExecuteAgentActionRequest, opts ...grpc.CallOption) (*ExecuteAgentActionResponse, error)
	// Get the observation for an agent
	GetAgentObservation(ctx context.Context, in *GetAgentObservationRequest, opts ...grpc.CallOption) (*GetAgentObservationResponse, error)
	// Create a new spectator stream
	CreateSpectator(ctx context.Context, in *CreateSpectatorRequest, opts ...grpc.CallOption) (SimulationService_CreateSpectatorClient, error)
	// Subscribe the spectator of given id to a region
	SubscribeSpectatorToRegion(ctx context.Context, in *SubscribeSpectatorToRegionRequest, opts ...grpc.CallOption) (*SubscribeSpectatorToRegionResponse, error)
}

type simulationServiceClient struct {
	cc *grpc.ClientConn
}

func NewSimulationServiceClient(cc *grpc.ClientConn) SimulationServiceClient {
	return &simulationServiceClient{cc}
}

func (c *simulationServiceClient) CreateAgent(ctx context.Context, in *CreateAgentRequest, opts ...grpc.CallOption) (*CreateAgentResponse, error) {
	out := new(CreateAgentResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/CreateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) GetAgent(ctx context.Context, in *GetAgentRequest, opts ...grpc.CallOption) (*GetAgentResponse, error) {
	out := new(GetAgentResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/GetAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*DeleteAgentResponse, error) {
	out := new(DeleteAgentResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/DeleteAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) ExecuteAgentAction(ctx context.Context, in *ExecuteAgentActionRequest, opts ...grpc.CallOption) (*ExecuteAgentActionResponse, error) {
	out := new(ExecuteAgentActionResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/ExecuteAgentAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) GetAgentObservation(ctx context.Context, in *GetAgentObservationRequest, opts ...grpc.CallOption) (*GetAgentObservationResponse, error) {
	out := new(GetAgentObservationResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/GetAgentObservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) CreateSpectator(ctx context.Context, in *CreateSpectatorRequest, opts ...grpc.CallOption) (SimulationService_CreateSpectatorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SimulationService_serviceDesc.Streams[0], "/v1.SimulationService/CreateSpectator", opts...)
	if err != nil {
		return nil, err
	}
	x := &simulationServiceCreateSpectatorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SimulationService_CreateSpectatorClient interface {
	Recv() (*CellUpdate, error)
	grpc.ClientStream
}

type simulationServiceCreateSpectatorClient struct {
	grpc.ClientStream
}

func (x *simulationServiceCreateSpectatorClient) Recv() (*CellUpdate, error) {
	m := new(CellUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *simulationServiceClient) SubscribeSpectatorToRegion(ctx context.Context, in *SubscribeSpectatorToRegionRequest, opts ...grpc.CallOption) (*SubscribeSpectatorToRegionResponse, error) {
	out := new(SubscribeSpectatorToRegionResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/SubscribeSpectatorToRegion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimulationServiceServer is the server API for SimulationService service.
type SimulationServiceServer interface {
	// Create new agent
	CreateAgent(context.Context, *CreateAgentRequest) (*CreateAgentResponse, error)
	// Get data for an agent
	GetAgent(context.Context, *GetAgentRequest) (*GetAgentResponse, error)
	// Delete an agent
	DeleteAgent(context.Context, *DeleteAgentRequest) (*DeleteAgentResponse, error)
	// Perform an action for an agent
	ExecuteAgentAction(context.Context, *ExecuteAgentActionRequest) (*ExecuteAgentActionResponse, error)
	// Get the observation for an agent
	GetAgentObservation(context.Context, *GetAgentObservationRequest) (*GetAgentObservationResponse, error)
	// Create a new spectator stream
	CreateSpectator(*CreateSpectatorRequest, SimulationService_CreateSpectatorServer) error
	// Subscribe the spectator of given id to a region
	SubscribeSpectatorToRegion(context.Context, *SubscribeSpectatorToRegionRequest) (*SubscribeSpectatorToRegionResponse, error)
}

func RegisterSimulationServiceServer(s *grpc.Server, srv SimulationServiceServer) {
	s.RegisterService(&_SimulationService_serviceDesc, srv)
}

func _SimulationService_CreateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).CreateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/CreateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).CreateAgent(ctx, req.(*CreateAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_GetAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).GetAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/GetAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).GetAgent(ctx, req.(*GetAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_DeleteAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).DeleteAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/DeleteAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).DeleteAgent(ctx, req.(*DeleteAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_ExecuteAgentAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteAgentActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).ExecuteAgentAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/ExecuteAgentAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).ExecuteAgentAction(ctx, req.(*ExecuteAgentActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_GetAgentObservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentObservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).GetAgentObservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/GetAgentObservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).GetAgentObservation(ctx, req.(*GetAgentObservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_CreateSpectator_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateSpectatorRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SimulationServiceServer).CreateSpectator(m, &simulationServiceCreateSpectatorServer{stream})
}

type SimulationService_CreateSpectatorServer interface {
	Send(*CellUpdate) error
	grpc.ServerStream
}

type simulationServiceCreateSpectatorServer struct {
	grpc.ServerStream
}

func (x *simulationServiceCreateSpectatorServer) Send(m *CellUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _SimulationService_SubscribeSpectatorToRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeSpectatorToRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).SubscribeSpectatorToRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/SubscribeSpectatorToRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).SubscribeSpectatorToRegion(ctx, req.(*SubscribeSpectatorToRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimulationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.SimulationService",
	HandlerType: (*SimulationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAgent",
			Handler:    _SimulationService_CreateAgent_Handler,
		},
		{
			MethodName: "GetAgent",
			Handler:    _SimulationService_GetAgent_Handler,
		},
		{
			MethodName: "DeleteAgent",
			Handler:    _SimulationService_DeleteAgent_Handler,
		},
		{
			MethodName: "ExecuteAgentAction",
			Handler:    _SimulationService_ExecuteAgentAction_Handler,
		},
		{
			MethodName: "GetAgentObservation",
			Handler:    _SimulationService_GetAgentObservation_Handler,
		},
		{
			MethodName: "SubscribeSpectatorToRegion",
			Handler:    _SimulationService_SubscribeSpectatorToRegion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateSpectator",
			Handler:       _SimulationService_CreateSpectator_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "simulation-service.proto",
}
