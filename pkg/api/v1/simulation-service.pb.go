// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Taks we have to do
type Entity struct {
	// Unique integer identifier of the agent
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Entity class
	Class                string   `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{0}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entity) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

type Action struct {
	// identifier for the action
	// Ex. Move, Eat, etc.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// direction to perform the action in
	// Ex. Up, Down, etc.
	Direction            string   `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{1}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Action) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

type Observation struct {
	// Id of the agent
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Cells around the agent
	Cells []string `protobuf:"bytes,2,rep,name=cells,proto3" json:"cells,omitempty"`
	// Agent stats
	Alive                bool     `protobuf:"varint,3,opt,name=alive,proto3" json:"alive,omitempty"`
	Energy               int32    `protobuf:"varint,4,opt,name=energy,proto3" json:"energy,omitempty"`
	Health               int32    `protobuf:"varint,5,opt,name=health,proto3" json:"health,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Observation) Reset()         { *m = Observation{} }
func (m *Observation) String() string { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()    {}
func (*Observation) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{2}
}

func (m *Observation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observation.Unmarshal(m, b)
}
func (m *Observation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observation.Marshal(b, m, deterministic)
}
func (m *Observation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observation.Merge(m, src)
}
func (m *Observation) XXX_Size() int {
	return xxx_messageInfo_Observation.Size(m)
}
func (m *Observation) XXX_DiscardUnknown() {
	xxx_messageInfo_Observation.DiscardUnknown(m)
}

var xxx_messageInfo_Observation proto.InternalMessageInfo

func (m *Observation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Observation) GetCells() []string {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *Observation) GetAlive() bool {
	if m != nil {
		return m.Alive
	}
	return false
}

func (m *Observation) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Observation) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

type CellUpdate struct {
	// Position
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	// The entity occupying a cell
	Entity               *Entity  `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellUpdate) Reset()         { *m = CellUpdate{} }
func (m *CellUpdate) String() string { return proto.CompactTextString(m) }
func (*CellUpdate) ProtoMessage()    {}
func (*CellUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{3}
}

func (m *CellUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellUpdate.Unmarshal(m, b)
}
func (m *CellUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellUpdate.Marshal(b, m, deterministic)
}
func (m *CellUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellUpdate.Merge(m, src)
}
func (m *CellUpdate) XXX_Size() int {
	return xxx_messageInfo_CellUpdate.Size(m)
}
func (m *CellUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CellUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CellUpdate proto.InternalMessageInfo

func (m *CellUpdate) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CellUpdate) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *CellUpdate) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type ServerAction struct {
	// action the server wants clients to take
	Action               string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerAction) Reset()         { *m = ServerAction{} }
func (m *ServerAction) String() string { return proto.CompactTextString(m) }
func (*ServerAction) ProtoMessage()    {}
func (*ServerAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{4}
}

func (m *ServerAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerAction.Unmarshal(m, b)
}
func (m *ServerAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerAction.Marshal(b, m, deterministic)
}
func (m *ServerAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerAction.Merge(m, src)
}
func (m *ServerAction) XXX_Size() int {
	return xxx_messageInfo_ServerAction.Size(m)
}
func (m *ServerAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerAction.DiscardUnknown(m)
}

var xxx_messageInfo_ServerAction proto.InternalMessageInfo

func (m *ServerAction) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

type SpectateResponse struct {
	// Types that are valid to be assigned to Data:
	//	*SpectateResponse_CellUpdate
	//	*SpectateResponse_ServerAction
	Data                 isSpectateResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SpectateResponse) Reset()         { *m = SpectateResponse{} }
func (m *SpectateResponse) String() string { return proto.CompactTextString(m) }
func (*SpectateResponse) ProtoMessage()    {}
func (*SpectateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{5}
}

func (m *SpectateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpectateResponse.Unmarshal(m, b)
}
func (m *SpectateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpectateResponse.Marshal(b, m, deterministic)
}
func (m *SpectateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpectateResponse.Merge(m, src)
}
func (m *SpectateResponse) XXX_Size() int {
	return xxx_messageInfo_SpectateResponse.Size(m)
}
func (m *SpectateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SpectateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SpectateResponse proto.InternalMessageInfo

type isSpectateResponse_Data interface {
	isSpectateResponse_Data()
}

type SpectateResponse_CellUpdate struct {
	CellUpdate *CellUpdate `protobuf:"bytes,1,opt,name=cellUpdate,proto3,oneof"`
}

type SpectateResponse_ServerAction struct {
	ServerAction *ServerAction `protobuf:"bytes,2,opt,name=serverAction,proto3,oneof"`
}

func (*SpectateResponse_CellUpdate) isSpectateResponse_Data() {}

func (*SpectateResponse_ServerAction) isSpectateResponse_Data() {}

func (m *SpectateResponse) GetData() isSpectateResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SpectateResponse) GetCellUpdate() *CellUpdate {
	if x, ok := m.GetData().(*SpectateResponse_CellUpdate); ok {
		return x.CellUpdate
	}
	return nil
}

func (m *SpectateResponse) GetServerAction() *ServerAction {
	if x, ok := m.GetData().(*SpectateResponse_ServerAction); ok {
		return x.ServerAction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SpectateResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SpectateResponse_CellUpdate)(nil),
		(*SpectateResponse_ServerAction)(nil),
	}
}

type Region struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{6}
}

func (m *Region) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Region.Unmarshal(m, b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Region.Marshal(b, m, deterministic)
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return xxx_messageInfo_Region.Size(m)
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Region) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// ----------------------
// -- Agent
// ----------------------
// Request data to create new agent
type CreateAgentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Agent to add
	// Entity agent = 2;
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentRequest) Reset()         { *m = CreateAgentRequest{} }
func (m *CreateAgentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAgentRequest) ProtoMessage()    {}
func (*CreateAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{7}
}

func (m *CreateAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentRequest.Unmarshal(m, b)
}
func (m *CreateAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentRequest.Marshal(b, m, deterministic)
}
func (m *CreateAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentRequest.Merge(m, src)
}
func (m *CreateAgentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAgentRequest.Size(m)
}
func (m *CreateAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentRequest proto.InternalMessageInfo

func (m *CreateAgentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateAgentRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CreateAgentRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// Contains data of created agent
type CreateAgentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created agent
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentResponse) Reset()         { *m = CreateAgentResponse{} }
func (m *CreateAgentResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAgentResponse) ProtoMessage()    {}
func (*CreateAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{8}
}

func (m *CreateAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentResponse.Unmarshal(m, b)
}
func (m *CreateAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentResponse.Marshal(b, m, deterministic)
}
func (m *CreateAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentResponse.Merge(m, src)
}
func (m *CreateAgentResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAgentResponse.Size(m)
}
func (m *CreateAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentResponse proto.InternalMessageInfo

func (m *CreateAgentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateAgentResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request data to delete agent
type DeleteAgentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the agent to delete
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAgentRequest) Reset()         { *m = DeleteAgentRequest{} }
func (m *DeleteAgentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAgentRequest) ProtoMessage()    {}
func (*DeleteAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{9}
}

func (m *DeleteAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAgentRequest.Unmarshal(m, b)
}
func (m *DeleteAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAgentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAgentRequest.Merge(m, src)
}
func (m *DeleteAgentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAgentRequest.Size(m)
}
func (m *DeleteAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAgentRequest proto.InternalMessageInfo

func (m *DeleteAgentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteAgentRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Contains status of delete operation
type DeleteAgentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed deleted
	// Equals 1 in case of successful delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAgentResponse) Reset()         { *m = DeleteAgentResponse{} }
func (m *DeleteAgentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAgentResponse) ProtoMessage()    {}
func (*DeleteAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{10}
}

func (m *DeleteAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAgentResponse.Unmarshal(m, b)
}
func (m *DeleteAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAgentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAgentResponse.Merge(m, src)
}
func (m *DeleteAgentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAgentResponse.Size(m)
}
func (m *DeleteAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAgentResponse proto.InternalMessageInfo

func (m *DeleteAgentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteAgentResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

type ExecuteAgentActionRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id for the agent that should perform the action
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Action id
	Action               *Action  `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteAgentActionRequest) Reset()         { *m = ExecuteAgentActionRequest{} }
func (m *ExecuteAgentActionRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteAgentActionRequest) ProtoMessage()    {}
func (*ExecuteAgentActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{11}
}

func (m *ExecuteAgentActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteAgentActionRequest.Unmarshal(m, b)
}
func (m *ExecuteAgentActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteAgentActionRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteAgentActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteAgentActionRequest.Merge(m, src)
}
func (m *ExecuteAgentActionRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteAgentActionRequest.Size(m)
}
func (m *ExecuteAgentActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteAgentActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteAgentActionRequest proto.InternalMessageInfo

func (m *ExecuteAgentActionRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ExecuteAgentActionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExecuteAgentActionRequest) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type ExecuteAgentActionResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api               string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IsAgentStillAlive bool   `protobuf:"varint,2,opt,name=isAgentStillAlive,proto3" json:"isAgentStillAlive,omitempty"`
	// Was the agent able to perform the action
	WasActionSuccessful  bool     `protobuf:"varint,3,opt,name=wasActionSuccessful,proto3" json:"wasActionSuccessful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteAgentActionResponse) Reset()         { *m = ExecuteAgentActionResponse{} }
func (m *ExecuteAgentActionResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteAgentActionResponse) ProtoMessage()    {}
func (*ExecuteAgentActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{12}
}

func (m *ExecuteAgentActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteAgentActionResponse.Unmarshal(m, b)
}
func (m *ExecuteAgentActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteAgentActionResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteAgentActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteAgentActionResponse.Merge(m, src)
}
func (m *ExecuteAgentActionResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteAgentActionResponse.Size(m)
}
func (m *ExecuteAgentActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteAgentActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteAgentActionResponse proto.InternalMessageInfo

func (m *ExecuteAgentActionResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ExecuteAgentActionResponse) GetIsAgentStillAlive() bool {
	if m != nil {
		return m.IsAgentStillAlive
	}
	return false
}

func (m *ExecuteAgentActionResponse) GetWasActionSuccessful() bool {
	if m != nil {
		return m.WasActionSuccessful
	}
	return false
}

type GetAgentObservationRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Agent that should perform the action
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentObservationRequest) Reset()         { *m = GetAgentObservationRequest{} }
func (m *GetAgentObservationRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentObservationRequest) ProtoMessage()    {}
func (*GetAgentObservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{13}
}

func (m *GetAgentObservationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentObservationRequest.Unmarshal(m, b)
}
func (m *GetAgentObservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentObservationRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentObservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentObservationRequest.Merge(m, src)
}
func (m *GetAgentObservationRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentObservationRequest.Size(m)
}
func (m *GetAgentObservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentObservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentObservationRequest proto.InternalMessageInfo

func (m *GetAgentObservationRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentObservationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAgentObservationResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Was the agent able to perform the action
	Observation          *Observation `protobuf:"bytes,2,opt,name=observation,proto3" json:"observation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAgentObservationResponse) Reset()         { *m = GetAgentObservationResponse{} }
func (m *GetAgentObservationResponse) String() string { return proto.CompactTextString(m) }
func (*GetAgentObservationResponse) ProtoMessage()    {}
func (*GetAgentObservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{14}
}

func (m *GetAgentObservationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentObservationResponse.Unmarshal(m, b)
}
func (m *GetAgentObservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentObservationResponse.Marshal(b, m, deterministic)
}
func (m *GetAgentObservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentObservationResponse.Merge(m, src)
}
func (m *GetAgentObservationResponse) XXX_Size() int {
	return xxx_messageInfo_GetAgentObservationResponse.Size(m)
}
func (m *GetAgentObservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentObservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentObservationResponse proto.InternalMessageInfo

func (m *GetAgentObservationResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetAgentObservationResponse) GetObservation() *Observation {
	if m != nil {
		return m.Observation
	}
	return nil
}

type ResetWorldRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetWorldRequest) Reset()         { *m = ResetWorldRequest{} }
func (m *ResetWorldRequest) String() string { return proto.CompactTextString(m) }
func (*ResetWorldRequest) ProtoMessage()    {}
func (*ResetWorldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{15}
}

func (m *ResetWorldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetWorldRequest.Unmarshal(m, b)
}
func (m *ResetWorldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetWorldRequest.Marshal(b, m, deterministic)
}
func (m *ResetWorldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetWorldRequest.Merge(m, src)
}
func (m *ResetWorldRequest) XXX_Size() int {
	return xxx_messageInfo_ResetWorldRequest.Size(m)
}
func (m *ResetWorldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetWorldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetWorldRequest proto.InternalMessageInfo

func (m *ResetWorldRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

type ResetWorldResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetWorldResponse) Reset()         { *m = ResetWorldResponse{} }
func (m *ResetWorldResponse) String() string { return proto.CompactTextString(m) }
func (*ResetWorldResponse) ProtoMessage()    {}
func (*ResetWorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{16}
}

func (m *ResetWorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetWorldResponse.Unmarshal(m, b)
}
func (m *ResetWorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetWorldResponse.Marshal(b, m, deterministic)
}
func (m *ResetWorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetWorldResponse.Merge(m, src)
}
func (m *ResetWorldResponse) XXX_Size() int {
	return xxx_messageInfo_ResetWorldResponse.Size(m)
}
func (m *ResetWorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetWorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetWorldResponse proto.InternalMessageInfo

// ----------------------
// -- Generic Entity
// ----------------------
// Request data to read entity
type GetEntityRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the agent
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEntityRequest) Reset()         { *m = GetEntityRequest{} }
func (m *GetEntityRequest) String() string { return proto.CompactTextString(m) }
func (*GetEntityRequest) ProtoMessage()    {}
func (*GetEntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{17}
}

func (m *GetEntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEntityRequest.Unmarshal(m, b)
}
func (m *GetEntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEntityRequest.Marshal(b, m, deterministic)
}
func (m *GetEntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntityRequest.Merge(m, src)
}
func (m *GetEntityRequest) XXX_Size() int {
	return xxx_messageInfo_GetEntityRequest.Size(m)
}
func (m *GetEntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntityRequest proto.InternalMessageInfo

func (m *GetEntityRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetEntityRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Contains entity data specified in by ID request
type GetEntityResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity read by ID
	Entity               *Entity  `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEntityResponse) Reset()         { *m = GetEntityResponse{} }
func (m *GetEntityResponse) String() string { return proto.CompactTextString(m) }
func (*GetEntityResponse) ProtoMessage()    {}
func (*GetEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{18}
}

func (m *GetEntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEntityResponse.Unmarshal(m, b)
}
func (m *GetEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEntityResponse.Marshal(b, m, deterministic)
}
func (m *GetEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntityResponse.Merge(m, src)
}
func (m *GetEntityResponse) XXX_Size() int {
	return xxx_messageInfo_GetEntityResponse.Size(m)
}
func (m *GetEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntityResponse proto.InternalMessageInfo

func (m *GetEntityResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *GetEntityResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

// ----------------------
// -- Spectate
// ----------------------
type CreateSpectatorRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id of the spectator
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSpectatorRequest) Reset()         { *m = CreateSpectatorRequest{} }
func (m *CreateSpectatorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSpectatorRequest) ProtoMessage()    {}
func (*CreateSpectatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{19}
}

func (m *CreateSpectatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSpectatorRequest.Unmarshal(m, b)
}
func (m *CreateSpectatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSpectatorRequest.Marshal(b, m, deterministic)
}
func (m *CreateSpectatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpectatorRequest.Merge(m, src)
}
func (m *CreateSpectatorRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSpectatorRequest.Size(m)
}
func (m *CreateSpectatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpectatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpectatorRequest proto.InternalMessageInfo

func (m *CreateSpectatorRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateSpectatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SubscribeSpectatorToRegionRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id of the spectator
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// What region to add to
	Region               *Region  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeSpectatorToRegionRequest) Reset()         { *m = SubscribeSpectatorToRegionRequest{} }
func (m *SubscribeSpectatorToRegionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeSpectatorToRegionRequest) ProtoMessage()    {}
func (*SubscribeSpectatorToRegionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{20}
}

func (m *SubscribeSpectatorToRegionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Unmarshal(m, b)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeSpectatorToRegionRequest.Merge(m, src)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeSpectatorToRegionRequest.Size(m)
}
func (m *SubscribeSpectatorToRegionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeSpectatorToRegionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeSpectatorToRegionRequest proto.InternalMessageInfo

func (m *SubscribeSpectatorToRegionRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SubscribeSpectatorToRegionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubscribeSpectatorToRegionRequest) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type SubscribeSpectatorToRegionResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Success status
	Successful           bool     `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeSpectatorToRegionResponse) Reset()         { *m = SubscribeSpectatorToRegionResponse{} }
func (m *SubscribeSpectatorToRegionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeSpectatorToRegionResponse) ProtoMessage()    {}
func (*SubscribeSpectatorToRegionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{21}
}

func (m *SubscribeSpectatorToRegionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Unmarshal(m, b)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeSpectatorToRegionResponse.Merge(m, src)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeSpectatorToRegionResponse.Size(m)
}
func (m *SubscribeSpectatorToRegionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeSpectatorToRegionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeSpectatorToRegionResponse proto.InternalMessageInfo

func (m *SubscribeSpectatorToRegionResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *SubscribeSpectatorToRegionResponse) GetSuccessful() bool {
	if m != nil {
		return m.Successful
	}
	return false
}

type UnsubscribeSpectatorFromRegionRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Id of the spectator
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// What region to add to
	Region               *Region  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeSpectatorFromRegionRequest) Reset()         { *m = UnsubscribeSpectatorFromRegionRequest{} }
func (m *UnsubscribeSpectatorFromRegionRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeSpectatorFromRegionRequest) ProtoMessage()    {}
func (*UnsubscribeSpectatorFromRegionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{22}
}

func (m *UnsubscribeSpectatorFromRegionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest.Unmarshal(m, b)
}
func (m *UnsubscribeSpectatorFromRegionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest.Marshal(b, m, deterministic)
}
func (m *UnsubscribeSpectatorFromRegionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest.Merge(m, src)
}
func (m *UnsubscribeSpectatorFromRegionRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest.Size(m)
}
func (m *UnsubscribeSpectatorFromRegionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeSpectatorFromRegionRequest proto.InternalMessageInfo

func (m *UnsubscribeSpectatorFromRegionRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UnsubscribeSpectatorFromRegionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnsubscribeSpectatorFromRegionRequest) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type UnsubscribeSpectatorFromRegionResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Success status
	Successful           bool     `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeSpectatorFromRegionResponse) Reset() {
	*m = UnsubscribeSpectatorFromRegionResponse{}
}
func (m *UnsubscribeSpectatorFromRegionResponse) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeSpectatorFromRegionResponse) ProtoMessage()    {}
func (*UnsubscribeSpectatorFromRegionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{23}
}

func (m *UnsubscribeSpectatorFromRegionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse.Unmarshal(m, b)
}
func (m *UnsubscribeSpectatorFromRegionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse.Marshal(b, m, deterministic)
}
func (m *UnsubscribeSpectatorFromRegionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse.Merge(m, src)
}
func (m *UnsubscribeSpectatorFromRegionResponse) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse.Size(m)
}
func (m *UnsubscribeSpectatorFromRegionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeSpectatorFromRegionResponse proto.InternalMessageInfo

func (m *UnsubscribeSpectatorFromRegionResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UnsubscribeSpectatorFromRegionResponse) GetSuccessful() bool {
	if m != nil {
		return m.Successful
	}
	return false
}

// ----------------------
// -- Remote Models
// ----------------------
type CreateRemoteModelRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRemoteModelRequest) Reset()         { *m = CreateRemoteModelRequest{} }
func (m *CreateRemoteModelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRemoteModelRequest) ProtoMessage()    {}
func (*CreateRemoteModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17d1085a606d9278, []int{24}
}

func (m *CreateRemoteModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRemoteModelRequest.Unmarshal(m, b)
}
func (m *CreateRemoteModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRemoteModelRequest.Marshal(b, m, deterministic)
}
func (m *CreateRemoteModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRemoteModelRequest.Merge(m, src)
}
func (m *CreateRemoteModelRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRemoteModelRequest.Size(m)
}
func (m *CreateRemoteModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRemoteModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRemoteModelRequest proto.InternalMessageInfo

func (m *CreateRemoteModelRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func init() {
	proto.RegisterType((*Entity)(nil), "v1.Entity")
	proto.RegisterType((*Action)(nil), "v1.Action")
	proto.RegisterType((*Observation)(nil), "v1.Observation")
	proto.RegisterType((*CellUpdate)(nil), "v1.CellUpdate")
	proto.RegisterType((*ServerAction)(nil), "v1.ServerAction")
	proto.RegisterType((*SpectateResponse)(nil), "v1.SpectateResponse")
	proto.RegisterType((*Region)(nil), "v1.Region")
	proto.RegisterType((*CreateAgentRequest)(nil), "v1.CreateAgentRequest")
	proto.RegisterType((*CreateAgentResponse)(nil), "v1.CreateAgentResponse")
	proto.RegisterType((*DeleteAgentRequest)(nil), "v1.DeleteAgentRequest")
	proto.RegisterType((*DeleteAgentResponse)(nil), "v1.DeleteAgentResponse")
	proto.RegisterType((*ExecuteAgentActionRequest)(nil), "v1.ExecuteAgentActionRequest")
	proto.RegisterType((*ExecuteAgentActionResponse)(nil), "v1.ExecuteAgentActionResponse")
	proto.RegisterType((*GetAgentObservationRequest)(nil), "v1.GetAgentObservationRequest")
	proto.RegisterType((*GetAgentObservationResponse)(nil), "v1.GetAgentObservationResponse")
	proto.RegisterType((*ResetWorldRequest)(nil), "v1.ResetWorldRequest")
	proto.RegisterType((*ResetWorldResponse)(nil), "v1.ResetWorldResponse")
	proto.RegisterType((*GetEntityRequest)(nil), "v1.GetEntityRequest")
	proto.RegisterType((*GetEntityResponse)(nil), "v1.GetEntityResponse")
	proto.RegisterType((*CreateSpectatorRequest)(nil), "v1.CreateSpectatorRequest")
	proto.RegisterType((*SubscribeSpectatorToRegionRequest)(nil), "v1.SubscribeSpectatorToRegionRequest")
	proto.RegisterType((*SubscribeSpectatorToRegionResponse)(nil), "v1.SubscribeSpectatorToRegionResponse")
	proto.RegisterType((*UnsubscribeSpectatorFromRegionRequest)(nil), "v1.UnsubscribeSpectatorFromRegionRequest")
	proto.RegisterType((*UnsubscribeSpectatorFromRegionResponse)(nil), "v1.UnsubscribeSpectatorFromRegionResponse")
	proto.RegisterType((*CreateRemoteModelRequest)(nil), "v1.CreateRemoteModelRequest")
}

func init() { proto.RegisterFile("simulation-service.proto", fileDescriptor_17d1085a606d9278) }

var fileDescriptor_17d1085a606d9278 = []byte{
	// 1171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x51, 0x6f, 0x1b, 0xc5,
	0x13, 0xef, 0xd9, 0x8d, 0xdb, 0x8c, 0xfb, 0x4f, 0xec, 0x4d, 0xe2, 0xba, 0xf7, 0x4f, 0xc3, 0xb1,
	0x6a, 0xa2, 0x34, 0x4a, 0x7c, 0x8e, 0x1b, 0x05, 0x29, 0x48, 0x88, 0xa4, 0x94, 0x16, 0x09, 0x84,
	0x7a, 0x4e, 0x8b, 0x84, 0x78, 0x59, 0xdf, 0x2d, 0xf6, 0x55, 0xe7, 0x5b, 0x73, 0xbb, 0x76, 0xe2,
	0x22, 0x5e, 0x10, 0xcf, 0x3c, 0xc0, 0x1b, 0xe2, 0x23, 0xf0, 0x6d, 0x10, 0x0f, 0xbc, 0xf7, 0x83,
	0xa0, 0xdd, 0x3d, 0xe7, 0xce, 0x67, 0x5f, 0x62, 0x21, 0xf1, 0xd4, 0xee, 0xec, 0xcc, 0x6f, 0x7e,
	0x33, 0x3b, 0xf3, 0x73, 0x0e, 0xea, 0xdc, 0xef, 0x0f, 0x03, 0x22, 0x7c, 0x16, 0x1e, 0x70, 0x1a,
	0x8d, 0x7c, 0x97, 0x36, 0x06, 0x11, 0x13, 0x0c, 0x15, 0x46, 0x87, 0xe6, 0x66, 0x97, 0xb1, 0x6e,
	0x40, 0x6d, 0x32, 0xf0, 0x6d, 0x12, 0x86, 0x4c, 0x28, 0x47, 0xae, 0x3d, 0xcc, 0x7d, 0xf5, 0x8f,
	0x7b, 0xd0, 0xa5, 0xe1, 0x01, 0xbf, 0x20, 0xdd, 0x2e, 0x8d, 0x6c, 0x36, 0x50, 0x1e, 0xb3, 0xde,
	0xb8, 0x01, 0xa5, 0x67, 0xa1, 0xf0, 0xc5, 0x18, 0xad, 0x40, 0xc1, 0xf7, 0xea, 0x86, 0x65, 0xec,
	0x16, 0x9d, 0x82, 0xef, 0xa1, 0x75, 0x58, 0x72, 0x03, 0xc2, 0x79, 0xfd, 0xb6, 0x65, 0xec, 0x2e,
	0x3b, 0xfa, 0x80, 0x8f, 0xa1, 0x74, 0xea, 0x4a, 0x80, 0x94, 0xff, 0xb2, 0xf2, 0xdf, 0x84, 0x65,
	0xcf, 0x8f, 0xa8, 0xba, 0xac, 0x17, 0x94, 0x39, 0x31, 0xe0, 0x31, 0x94, 0xbf, 0xec, 0xc8, 0x52,
	0x48, 0x26, 0x38, 0x49, 0x46, 0x83, 0x80, 0xd7, 0x0b, 0x56, 0x51, 0x25, 0x93, 0x07, 0x69, 0x25,
	0x81, 0x3f, 0xa2, 0xf5, 0xa2, 0x65, 0xec, 0xde, 0x75, 0xf4, 0x01, 0xd5, 0xa0, 0x44, 0x43, 0x1a,
	0x75, 0xc7, 0x8a, 0xd9, 0x92, 0x13, 0x9f, 0xa4, 0xbd, 0x47, 0x49, 0x20, 0x7a, 0xf5, 0x25, 0x6d,
	0xd7, 0x27, 0xfc, 0x39, 0xc0, 0x53, 0x1a, 0x04, 0xaf, 0x06, 0x1e, 0x11, 0x14, 0xdd, 0x03, 0xe3,
	0x52, 0x25, 0x5e, 0x72, 0x8c, 0x4b, 0x79, 0x1a, 0x2b, 0xb2, 0x4b, 0x8e, 0x31, 0x46, 0x58, 0x22,
	0xcb, 0x66, 0x28, 0xe4, 0x72, 0x0b, 0x1a, 0xa3, 0xc3, 0x86, 0x6e, 0x8f, 0x13, 0xdf, 0xe0, 0x1d,
	0xb8, 0xd7, 0xa6, 0xd1, 0x88, 0x46, 0x71, 0x1b, 0x6a, 0x50, 0x22, 0xba, 0x66, 0xdd, 0x8a, 0xf8,
	0x84, 0x7f, 0x32, 0xa0, 0xd2, 0x1e, 0x50, 0x57, 0x10, 0x41, 0x1d, 0xca, 0x07, 0x2c, 0xe4, 0x14,
	0x35, 0x01, 0xdc, 0x2b, 0x2a, 0x2a, 0xa0, 0xdc, 0x5a, 0x91, 0x49, 0x12, 0x82, 0x2f, 0x6e, 0x39,
	0x29, 0x1f, 0x74, 0x0c, 0xf7, 0x78, 0x2a, 0x9d, 0xe2, 0x5a, 0x6e, 0x55, 0x64, 0x4c, 0x9a, 0xc6,
	0x8b, 0x5b, 0xce, 0x94, 0xdf, 0x59, 0x09, 0x6e, 0x7b, 0x44, 0x10, 0xfc, 0x08, 0x4a, 0x0e, 0xed,
	0x4a, 0xa2, 0xd7, 0x14, 0x8e, 0xcf, 0x00, 0x3d, 0x8d, 0x28, 0x11, 0xf4, 0xb4, 0x4b, 0x43, 0xe1,
	0xd0, 0xef, 0x86, 0x94, 0x0b, 0x54, 0x81, 0x22, 0x19, 0xf8, 0x71, 0x5d, 0xf2, 0xbf, 0x1a, 0xa3,
	0x30, 0x85, 0x51, 0x9c, 0x60, 0x7c, 0x00, 0x6b, 0x53, 0x18, 0x71, 0xc9, 0xb3, 0x20, 0xfa, 0xed,
	0x0b, 0x93, 0xb7, 0xc7, 0xc7, 0x80, 0x3e, 0xa1, 0x01, 0xbd, 0x31, 0x79, 0x36, 0xee, 0x14, 0xd6,
	0xa6, 0xe2, 0x72, 0x13, 0xd6, 0xe1, 0x8e, 0xa7, 0x1c, 0x27, 0xd1, 0x93, 0x23, 0x26, 0xf0, 0xe0,
	0xd9, 0x25, 0x75, 0x87, 0x31, 0x86, 0xee, 0xdd, 0xc2, 0x0c, 0xe4, 0xbc, 0xc4, 0x6f, 0x5f, 0x4c,
	0xe6, 0x25, 0x06, 0x99, 0xcc, 0xc1, 0xcf, 0x06, 0x98, 0xf3, 0x72, 0xe4, 0xb2, 0xdd, 0x87, 0xaa,
	0xcf, 0x95, 0x6b, 0x5b, 0xf8, 0x41, 0x70, 0xaa, 0x16, 0xa0, 0xa0, 0x16, 0x60, 0xf6, 0x02, 0x35,
	0x61, 0xed, 0x82, 0x70, 0x0d, 0xda, 0x1e, 0xba, 0x2e, 0xe5, 0xfc, 0xdb, 0x61, 0x10, 0x2f, 0xcc,
	0xbc, 0x2b, 0xfc, 0x11, 0x98, 0xcf, 0xa9, 0x50, 0x38, 0xa9, 0x8d, 0x5c, 0xbc, 0xed, 0x1d, 0xf8,
	0xff, 0xdc, 0xf8, 0xdc, 0x82, 0x0e, 0xa1, 0xcc, 0x12, 0xc7, 0x78, 0x82, 0x57, 0x65, 0xab, 0xd2,
	0xf1, 0x69, 0x1f, 0xbc, 0x0d, 0x55, 0x87, 0x72, 0x2a, 0xbe, 0x62, 0x51, 0xe0, 0xe5, 0x52, 0xc3,
	0xeb, 0x80, 0xd2, 0x6e, 0x9a, 0x01, 0x3e, 0x82, 0xca, 0x73, 0x2a, 0xe2, 0xb5, 0x5d, 0xb8, 0xac,
	0xcf, 0xa0, 0x9a, 0x8a, 0xca, 0x2d, 0x26, 0x91, 0x88, 0x42, 0xae, 0x44, 0x9c, 0x40, 0x4d, 0x6f,
	0x42, 0xbc, 0xff, 0x2c, 0x5a, 0x84, 0x86, 0x52, 0x51, 0xec, 0xc3, 0xfb, 0xed, 0x61, 0x87, 0xbb,
	0x91, 0xdf, 0x49, 0xc2, 0xcf, 0x99, 0xde, 0xe1, 0x85, 0x61, 0x24, 0xcd, 0x48, 0x85, 0xa4, 0x27,
	0x33, 0x06, 0x89, 0x6f, 0xf0, 0x6b, 0xc0, 0xd7, 0xa5, 0xca, 0x6d, 0xc1, 0x16, 0x00, 0x4f, 0x26,
	0x4d, 0x4f, 0x66, 0xca, 0x82, 0xfb, 0xb0, 0xfd, 0x2a, 0xe4, 0x33, 0xc8, 0x9f, 0x46, 0xac, 0xff,
	0x5f, 0x94, 0xf1, 0x35, 0xec, 0xdc, 0x94, 0xee, 0x5f, 0x97, 0xb2, 0x0f, 0x75, 0xfd, 0x92, 0x0e,
	0xed, 0x33, 0x41, 0xbf, 0x60, 0x1e, 0x0d, 0x72, 0xd9, 0xb7, 0xde, 0xdd, 0x85, 0x6a, 0xfb, 0xea,
	0x87, 0xbb, 0xad, 0x7f, 0xb7, 0xd1, 0x39, 0x94, 0x53, 0xba, 0x88, 0x6a, 0x4a, 0xee, 0x67, 0xc4,
	0xd6, 0xbc, 0x3f, 0x63, 0x8f, 0xc7, 0x79, 0xfd, 0xc7, 0x3f, 0xdf, 0xfd, 0x5a, 0x58, 0xc1, 0xcb,
	0xf6, 0xe8, 0xd0, 0x26, 0xf2, 0xea, 0xc4, 0xd8, 0x43, 0x2f, 0x61, 0xf9, 0x6a, 0x5c, 0xd1, 0xba,
	0x8c, 0xcd, 0xce, 0xbc, 0xb9, 0x91, 0xb1, 0xc6, 0x78, 0xf7, 0x15, 0x5e, 0x15, 0xad, 0x4a, 0x3c,
	0x3d, 0xb1, 0xf6, 0xf7, 0xbe, 0xf7, 0x03, 0x7a, 0x0d, 0xe5, 0x94, 0x9e, 0x6a, 0xa2, 0xb3, 0xc2,
	0xac, 0x89, 0xce, 0x11, 0x5e, 0x5c, 0x53, 0xc0, 0x15, 0xb4, 0x72, 0x45, 0x54, 0xe3, 0x86, 0x80,
	0x66, 0x05, 0x10, 0x3d, 0x54, 0x8b, 0x93, 0x27, 0xbe, 0xe6, 0x56, 0xde, 0x75, 0x9c, 0xec, 0x81,
	0x4a, 0xb6, 0x66, 0x66, 0x92, 0xc9, 0xd6, 0xbc, 0x85, 0xb5, 0x39, 0x02, 0x85, 0xb6, 0xe2, 0x76,
	0xe4, 0x28, 0x9f, 0xf9, 0x5e, 0xee, 0x7d, 0x9c, 0x12, 0xab, 0x94, 0x9b, 0xc8, 0x9c, 0x4e, 0x69,
	0xa7, 0x84, 0x0b, 0xbd, 0x04, 0x48, 0x14, 0x09, 0x6d, 0xe8, 0x71, 0xcd, 0x08, 0x99, 0x59, 0xcb,
	0x9a, 0xa7, 0x5f, 0xda, 0x54, 0x2f, 0x1d, 0xc9, 0x7b, 0x59, 0xce, 0x37, 0xb0, 0x9a, 0x51, 0x13,
	0x64, 0x26, 0xb3, 0x92, 0x95, 0x18, 0x53, 0xcd, 0x42, 0xf6, 0x0f, 0x0f, 0xbc, 0xa1, 0xa0, 0x57,
	0xd1, 0xff, 0x24, 0x34, 0x9f, 0xc4, 0x34, 0x0d, 0xf4, 0xbb, 0x01, 0x66, 0xbe, 0x0a, 0xa0, 0x6d,
	0x85, 0x76, 0x93, 0x20, 0x99, 0x3b, 0x37, 0xb9, 0xc5, 0x34, 0x6c, 0x45, 0xe3, 0xb1, 0xf9, 0x68,
	0x8a, 0x86, 0x6e, 0xe3, 0xd5, 0x0a, 0x4f, 0xa2, 0x64, 0xf1, 0x7f, 0x18, 0xb0, 0x75, 0xfd, 0x76,
	0xa3, 0xc7, 0x32, 0xf7, 0x42, 0x82, 0x63, 0xee, 0x2d, 0xe2, 0x1a, 0x53, 0x7d, 0xa2, 0xa8, 0x1e,
	0x98, 0xbb, 0x73, 0xa8, 0x0e, 0x13, 0x88, 0x24, 0x52, 0xd2, 0x75, 0xa1, 0x3a, 0xa3, 0x17, 0x68,
	0x33, 0x79, 0xad, 0x59, 0x19, 0x31, 0xb3, 0x3f, 0x84, 0xf8, 0xa1, 0x4a, 0x7c, 0x1f, 0x6d, 0xc8,
	0xc4, 0x6e, 0x36, 0xac, 0x69, 0x9c, 0xfd, 0x6d, 0xfc, 0x72, 0xfa, 0x97, 0x81, 0x18, 0xa0, 0x44,
	0x6c, 0xac, 0xf8, 0x2b, 0x01, 0x9f, 0x03, 0x4a, 0xbe, 0x1d, 0xac, 0x41, 0xc4, 0xde, 0x50, 0x57,
	0xa0, 0x47, 0x3d, 0x21, 0x06, 0xfc, 0xc4, 0xb6, 0xbb, 0xbe, 0xe8, 0x0d, 0x3b, 0x0d, 0x97, 0xf5,
	0x6d, 0x16, 0x90, 0x3e, 0xf1, 0xed, 0xc4, 0xdb, 0xac, 0xbf, 0x25, 0x6e, 0x8f, 0x44, 0xe3, 0x1e,
	0x0b, 0x02, 0x12, 0x7a, 0x1f, 0x77, 0xfb, 0xc4, 0x0f, 0xa4, 0x6f, 0xab, 0x78, 0xd8, 0x68, 0xee,
	0x19, 0x46, 0xab, 0x42, 0x06, 0x83, 0xc0, 0x77, 0x95, 0xbb, 0xfd, 0x86, 0xb3, 0xf0, 0x64, 0xc6,
	0xe2, 0x7c, 0x08, 0xc5, 0xa3, 0xe6, 0x11, 0x3a, 0x82, 0x3d, 0x87, 0x8a, 0x61, 0x14, 0x52, 0xcf,
	0xba, 0xe8, 0xd1, 0xd0, 0x12, 0x3d, 0x6a, 0x45, 0x94, 0xb3, 0x61, 0xe4, 0x52, 0xcb, 0x63, 0x94,
	0x5b, 0x21, 0x13, 0x16, 0xbd, 0xf4, 0xb9, 0x68, 0xa0, 0x12, 0xdc, 0xfe, 0xad, 0x60, 0xdc, 0xe9,
	0x94, 0xd4, 0x57, 0xc9, 0x93, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x50, 0x34, 0xba, 0x73, 0x01,
	0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimulationServiceClient is the client API for SimulationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimulationServiceClient interface {
	// Create new agent
	CreateAgent(ctx context.Context, in *CreateAgentRequest, opts ...grpc.CallOption) (*CreateAgentResponse, error)
	// Get data for an entity
	GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*GetEntityResponse, error)
	// Delete an agent
	DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*DeleteAgentResponse, error)
	// Perform an action for an agent
	ExecuteAgentAction(ctx context.Context, in *ExecuteAgentActionRequest, opts ...grpc.CallOption) (*ExecuteAgentActionResponse, error)
	// Get the observation for an agent
	GetAgentObservation(ctx context.Context, in *GetAgentObservationRequest, opts ...grpc.CallOption) (*GetAgentObservationResponse, error)
	// Reset the world
	ResetWorld(ctx context.Context, in *ResetWorldRequest, opts ...grpc.CallOption) (*ResetWorldResponse, error)
	// Create a new spectator stream
	CreateSpectator(ctx context.Context, in *CreateSpectatorRequest, opts ...grpc.CallOption) (SimulationService_CreateSpectatorClient, error)
	// Subscribe the spectator of given id to a region
	SubscribeSpectatorToRegion(ctx context.Context, in *SubscribeSpectatorToRegionRequest, opts ...grpc.CallOption) (*SubscribeSpectatorToRegionResponse, error)
	// Subscribe the spectator of given id to a region
	UnsubscribeSpectatorFromRegion(ctx context.Context, in *UnsubscribeSpectatorFromRegionRequest, opts ...grpc.CallOption) (*UnsubscribeSpectatorFromRegionResponse, error)
	// Create a remote model
	// Receives Agent Action Execution requests
	// Returns observations
	CreateRemoteModel(ctx context.Context, in *CreateRemoteModelRequest, opts ...grpc.CallOption) (SimulationService_CreateRemoteModelClient, error)
}

type simulationServiceClient struct {
	cc *grpc.ClientConn
}

func NewSimulationServiceClient(cc *grpc.ClientConn) SimulationServiceClient {
	return &simulationServiceClient{cc}
}

func (c *simulationServiceClient) CreateAgent(ctx context.Context, in *CreateAgentRequest, opts ...grpc.CallOption) (*CreateAgentResponse, error) {
	out := new(CreateAgentResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/CreateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*GetEntityResponse, error) {
	out := new(GetEntityResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/GetEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*DeleteAgentResponse, error) {
	out := new(DeleteAgentResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/DeleteAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) ExecuteAgentAction(ctx context.Context, in *ExecuteAgentActionRequest, opts ...grpc.CallOption) (*ExecuteAgentActionResponse, error) {
	out := new(ExecuteAgentActionResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/ExecuteAgentAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) GetAgentObservation(ctx context.Context, in *GetAgentObservationRequest, opts ...grpc.CallOption) (*GetAgentObservationResponse, error) {
	out := new(GetAgentObservationResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/GetAgentObservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) ResetWorld(ctx context.Context, in *ResetWorldRequest, opts ...grpc.CallOption) (*ResetWorldResponse, error) {
	out := new(ResetWorldResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/ResetWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) CreateSpectator(ctx context.Context, in *CreateSpectatorRequest, opts ...grpc.CallOption) (SimulationService_CreateSpectatorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SimulationService_serviceDesc.Streams[0], "/v1.SimulationService/CreateSpectator", opts...)
	if err != nil {
		return nil, err
	}
	x := &simulationServiceCreateSpectatorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SimulationService_CreateSpectatorClient interface {
	Recv() (*SpectateResponse, error)
	grpc.ClientStream
}

type simulationServiceCreateSpectatorClient struct {
	grpc.ClientStream
}

func (x *simulationServiceCreateSpectatorClient) Recv() (*SpectateResponse, error) {
	m := new(SpectateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *simulationServiceClient) SubscribeSpectatorToRegion(ctx context.Context, in *SubscribeSpectatorToRegionRequest, opts ...grpc.CallOption) (*SubscribeSpectatorToRegionResponse, error) {
	out := new(SubscribeSpectatorToRegionResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/SubscribeSpectatorToRegion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) UnsubscribeSpectatorFromRegion(ctx context.Context, in *UnsubscribeSpectatorFromRegionRequest, opts ...grpc.CallOption) (*UnsubscribeSpectatorFromRegionResponse, error) {
	out := new(UnsubscribeSpectatorFromRegionResponse)
	err := c.cc.Invoke(ctx, "/v1.SimulationService/UnsubscribeSpectatorFromRegion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simulationServiceClient) CreateRemoteModel(ctx context.Context, in *CreateRemoteModelRequest, opts ...grpc.CallOption) (SimulationService_CreateRemoteModelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SimulationService_serviceDesc.Streams[1], "/v1.SimulationService/CreateRemoteModel", opts...)
	if err != nil {
		return nil, err
	}
	x := &simulationServiceCreateRemoteModelClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SimulationService_CreateRemoteModelClient interface {
	Recv() (*Observation, error)
	grpc.ClientStream
}

type simulationServiceCreateRemoteModelClient struct {
	grpc.ClientStream
}

func (x *simulationServiceCreateRemoteModelClient) Recv() (*Observation, error) {
	m := new(Observation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SimulationServiceServer is the server API for SimulationService service.
type SimulationServiceServer interface {
	// Create new agent
	CreateAgent(context.Context, *CreateAgentRequest) (*CreateAgentResponse, error)
	// Get data for an entity
	GetEntity(context.Context, *GetEntityRequest) (*GetEntityResponse, error)
	// Delete an agent
	DeleteAgent(context.Context, *DeleteAgentRequest) (*DeleteAgentResponse, error)
	// Perform an action for an agent
	ExecuteAgentAction(context.Context, *ExecuteAgentActionRequest) (*ExecuteAgentActionResponse, error)
	// Get the observation for an agent
	GetAgentObservation(context.Context, *GetAgentObservationRequest) (*GetAgentObservationResponse, error)
	// Reset the world
	ResetWorld(context.Context, *ResetWorldRequest) (*ResetWorldResponse, error)
	// Create a new spectator stream
	CreateSpectator(*CreateSpectatorRequest, SimulationService_CreateSpectatorServer) error
	// Subscribe the spectator of given id to a region
	SubscribeSpectatorToRegion(context.Context, *SubscribeSpectatorToRegionRequest) (*SubscribeSpectatorToRegionResponse, error)
	// Subscribe the spectator of given id to a region
	UnsubscribeSpectatorFromRegion(context.Context, *UnsubscribeSpectatorFromRegionRequest) (*UnsubscribeSpectatorFromRegionResponse, error)
	// Create a remote model
	// Receives Agent Action Execution requests
	// Returns observations
	CreateRemoteModel(*CreateRemoteModelRequest, SimulationService_CreateRemoteModelServer) error
}

func RegisterSimulationServiceServer(s *grpc.Server, srv SimulationServiceServer) {
	s.RegisterService(&_SimulationService_serviceDesc, srv)
}

func _SimulationService_CreateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).CreateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/CreateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).CreateAgent(ctx, req.(*CreateAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_GetEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).GetEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/GetEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).GetEntity(ctx, req.(*GetEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_DeleteAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).DeleteAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/DeleteAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).DeleteAgent(ctx, req.(*DeleteAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_ExecuteAgentAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteAgentActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).ExecuteAgentAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/ExecuteAgentAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).ExecuteAgentAction(ctx, req.(*ExecuteAgentActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_GetAgentObservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentObservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).GetAgentObservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/GetAgentObservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).GetAgentObservation(ctx, req.(*GetAgentObservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_ResetWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).ResetWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/ResetWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).ResetWorld(ctx, req.(*ResetWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_CreateSpectator_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateSpectatorRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SimulationServiceServer).CreateSpectator(m, &simulationServiceCreateSpectatorServer{stream})
}

type SimulationService_CreateSpectatorServer interface {
	Send(*SpectateResponse) error
	grpc.ServerStream
}

type simulationServiceCreateSpectatorServer struct {
	grpc.ServerStream
}

func (x *simulationServiceCreateSpectatorServer) Send(m *SpectateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SimulationService_SubscribeSpectatorToRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeSpectatorToRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).SubscribeSpectatorToRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/SubscribeSpectatorToRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).SubscribeSpectatorToRegion(ctx, req.(*SubscribeSpectatorToRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_UnsubscribeSpectatorFromRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeSpectatorFromRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimulationServiceServer).UnsubscribeSpectatorFromRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.SimulationService/UnsubscribeSpectatorFromRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimulationServiceServer).UnsubscribeSpectatorFromRegion(ctx, req.(*UnsubscribeSpectatorFromRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimulationService_CreateRemoteModel_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateRemoteModelRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SimulationServiceServer).CreateRemoteModel(m, &simulationServiceCreateRemoteModelServer{stream})
}

type SimulationService_CreateRemoteModelServer interface {
	Send(*Observation) error
	grpc.ServerStream
}

type simulationServiceCreateRemoteModelServer struct {
	grpc.ServerStream
}

func (x *simulationServiceCreateRemoteModelServer) Send(m *Observation) error {
	return x.ServerStream.SendMsg(m)
}

var _SimulationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.SimulationService",
	HandlerType: (*SimulationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAgent",
			Handler:    _SimulationService_CreateAgent_Handler,
		},
		{
			MethodName: "GetEntity",
			Handler:    _SimulationService_GetEntity_Handler,
		},
		{
			MethodName: "DeleteAgent",
			Handler:    _SimulationService_DeleteAgent_Handler,
		},
		{
			MethodName: "ExecuteAgentAction",
			Handler:    _SimulationService_ExecuteAgentAction_Handler,
		},
		{
			MethodName: "GetAgentObservation",
			Handler:    _SimulationService_GetAgentObservation_Handler,
		},
		{
			MethodName: "ResetWorld",
			Handler:    _SimulationService_ResetWorld_Handler,
		},
		{
			MethodName: "SubscribeSpectatorToRegion",
			Handler:    _SimulationService_SubscribeSpectatorToRegion_Handler,
		},
		{
			MethodName: "UnsubscribeSpectatorFromRegion",
			Handler:    _SimulationService_UnsubscribeSpectatorFromRegion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateSpectator",
			Handler:       _SimulationService_CreateSpectator_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateRemoteModel",
			Handler:       _SimulationService_CreateRemoteModel_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "simulation-service.proto",
}
